=begin
#Open Banking

#OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.

The version of the OpenAPI document: 1.19.0
Contact: apisupport@mastercard.com
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'cgi'

module OpenBanking
  class AccountsSimpleApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get Customer Account by ID (Simple)
    # This API is a lighter version of Get Customer Accounts by ID, returning only basic information of a customer account.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
    # @param customer_id [String] A customer ID
    # @param account_id [String] The account ID
    # @param [Hash] opts the optional parameters
    # @return [CustomerAccountSimple]
    def get_customer_account_simple(customer_id, account_id, opts = {})
      data, _status_code, _headers = get_customer_account_simple_with_http_info(customer_id, account_id, opts)
      data
    end

    # Get Customer Account by ID (Simple)
    # This API is a lighter version of Get Customer Accounts by ID, returning only basic information of a customer account.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
    # @param customer_id [String] A customer ID
    # @param account_id [String] The account ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(CustomerAccountSimple, Integer, Hash)>] CustomerAccountSimple data, response status code and response headers
    def get_customer_account_simple_with_http_info(customer_id, account_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AccountsSimpleApi.get_customer_account_simple ...'
      end
      # verify the required parameter 'customer_id' is set
      if @api_client.config.client_side_validation && customer_id.nil?
        fail ArgumentError, "Missing the required parameter 'customer_id' when calling AccountsSimpleApi.get_customer_account_simple"
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling AccountsSimpleApi.get_customer_account_simple"
      end
      # resource path
      local_var_path = '/aggregation/v1/customers/{customerId}/accounts/{accountId}/simple'.sub('{' + 'customerId' + '}', CGI.escape(customer_id.to_s)).sub('{' + 'accountId' + '}', CGI.escape(account_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/plain'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'CustomerAccountSimple'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['FinicityAppToken', 'FinicityAppKey']

      new_options = opts.merge(
        :operation => :"AccountsSimpleApi.get_customer_account_simple",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AccountsSimpleApi#get_customer_account_simple\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Customer Accounts by Institution Login ID (Simple)
    # This API is a lighter version of Get Customer Accounts by Institution Login ID, returning only basic information of all active accounts owned by the given customer at the given institution login ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
    # @param customer_id [String] A customer ID
    # @param institution_login_id [String] The institution login ID
    # @param [Hash] opts the optional parameters
    # @return [CustomerAccountsSimple]
    def get_customer_accounts_by_institution_login_simple(customer_id, institution_login_id, opts = {})
      data, _status_code, _headers = get_customer_accounts_by_institution_login_simple_with_http_info(customer_id, institution_login_id, opts)
      data
    end

    # Get Customer Accounts by Institution Login ID (Simple)
    # This API is a lighter version of Get Customer Accounts by Institution Login ID, returning only basic information of all active accounts owned by the given customer at the given institution login ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
    # @param customer_id [String] A customer ID
    # @param institution_login_id [String] The institution login ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(CustomerAccountsSimple, Integer, Hash)>] CustomerAccountsSimple data, response status code and response headers
    def get_customer_accounts_by_institution_login_simple_with_http_info(customer_id, institution_login_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AccountsSimpleApi.get_customer_accounts_by_institution_login_simple ...'
      end
      # verify the required parameter 'customer_id' is set
      if @api_client.config.client_side_validation && customer_id.nil?
        fail ArgumentError, "Missing the required parameter 'customer_id' when calling AccountsSimpleApi.get_customer_accounts_by_institution_login_simple"
      end
      # verify the required parameter 'institution_login_id' is set
      if @api_client.config.client_side_validation && institution_login_id.nil?
        fail ArgumentError, "Missing the required parameter 'institution_login_id' when calling AccountsSimpleApi.get_customer_accounts_by_institution_login_simple"
      end
      # resource path
      local_var_path = '/aggregation/v1/customers/{customerId}/institutionLogins/{institutionLoginId}/accounts/simple'.sub('{' + 'customerId' + '}', CGI.escape(customer_id.to_s)).sub('{' + 'institutionLoginId' + '}', CGI.escape(institution_login_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/plain'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'CustomerAccountsSimple'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['FinicityAppToken', 'FinicityAppKey']

      new_options = opts.merge(
        :operation => :"AccountsSimpleApi.get_customer_accounts_by_institution_login_simple",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AccountsSimpleApi#get_customer_accounts_by_institution_login_simple\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Customer Accounts by Institution ID (Simple)
    # This API is a lighter version of Get Customer Accounts by Institution ID, returning only basic information of active accounts owned by the given customer at the given institution.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
    # @param customer_id [String] A customer ID
    # @param institution_id [Integer] The institution ID
    # @param [Hash] opts the optional parameters
    # @return [CustomerAccountsSimple]
    def get_customer_accounts_by_institution_simple(customer_id, institution_id, opts = {})
      data, _status_code, _headers = get_customer_accounts_by_institution_simple_with_http_info(customer_id, institution_id, opts)
      data
    end

    # Get Customer Accounts by Institution ID (Simple)
    # This API is a lighter version of Get Customer Accounts by Institution ID, returning only basic information of active accounts owned by the given customer at the given institution.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
    # @param customer_id [String] A customer ID
    # @param institution_id [Integer] The institution ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(CustomerAccountsSimple, Integer, Hash)>] CustomerAccountsSimple data, response status code and response headers
    def get_customer_accounts_by_institution_simple_with_http_info(customer_id, institution_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AccountsSimpleApi.get_customer_accounts_by_institution_simple ...'
      end
      # verify the required parameter 'customer_id' is set
      if @api_client.config.client_side_validation && customer_id.nil?
        fail ArgumentError, "Missing the required parameter 'customer_id' when calling AccountsSimpleApi.get_customer_accounts_by_institution_simple"
      end
      # verify the required parameter 'institution_id' is set
      if @api_client.config.client_side_validation && institution_id.nil?
        fail ArgumentError, "Missing the required parameter 'institution_id' when calling AccountsSimpleApi.get_customer_accounts_by_institution_simple"
      end
      # resource path
      local_var_path = '/aggregation/v1/customers/{customerId}/institutions/{institutionId}/accounts/simple'.sub('{' + 'customerId' + '}', CGI.escape(customer_id.to_s)).sub('{' + 'institutionId' + '}', CGI.escape(institution_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/plain'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'CustomerAccountsSimple'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['FinicityAppToken', 'FinicityAppKey']

      new_options = opts.merge(
        :operation => :"AccountsSimpleApi.get_customer_accounts_by_institution_simple",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AccountsSimpleApi#get_customer_accounts_by_institution_simple\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Customer Accounts (Simple)
    # This API is a lighter version of Get Customer Accounts, returning only basic information of all active customer accounts.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
    # @param customer_id [String] A customer ID
    # @param [Hash] opts the optional parameters
    # @return [CustomerAccountsSimple]
    def get_customer_accounts_simple(customer_id, opts = {})
      data, _status_code, _headers = get_customer_accounts_simple_with_http_info(customer_id, opts)
      data
    end

    # Get Customer Accounts (Simple)
    # This API is a lighter version of Get Customer Accounts, returning only basic information of all active customer accounts.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
    # @param customer_id [String] A customer ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(CustomerAccountsSimple, Integer, Hash)>] CustomerAccountsSimple data, response status code and response headers
    def get_customer_accounts_simple_with_http_info(customer_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AccountsSimpleApi.get_customer_accounts_simple ...'
      end
      # verify the required parameter 'customer_id' is set
      if @api_client.config.client_side_validation && customer_id.nil?
        fail ArgumentError, "Missing the required parameter 'customer_id' when calling AccountsSimpleApi.get_customer_accounts_simple"
      end
      # resource path
      local_var_path = '/aggregation/v1/customers/{customerId}/accounts/simple'.sub('{' + 'customerId' + '}', CGI.escape(customer_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/plain'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'CustomerAccountsSimple'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['FinicityAppToken', 'FinicityAppKey']

      new_options = opts.merge(
        :operation => :"AccountsSimpleApi.get_customer_accounts_simple",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AccountsSimpleApi#get_customer_accounts_simple\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
