=begin
#Open Banking

#OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.

The version of the OpenAPI document: 1.19.0
Contact: apisupport@mastercard.com
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'cgi'

module OpenBanking
  class PortfoliosApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get Portfolio by Consumer
    # Return a portfolio of most recently generated reports for each report type for a given consumer. If there are multiple reports that were generated for a report type (VOA, VOI, etc.), only the most recently generated report for the type will be returned.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
    # @param consumer_id [String] The consumer ID
    # @param portfolio_id [String] A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports.
    # @param [Hash] opts the optional parameters
    # @return [PortfolioWithConsumerSummary]
    def get_portfolio_by_consumer(consumer_id, portfolio_id, opts = {})
      data, _status_code, _headers = get_portfolio_by_consumer_with_http_info(consumer_id, portfolio_id, opts)
      data
    end

    # Get Portfolio by Consumer
    # Return a portfolio of most recently generated reports for each report type for a given consumer. If there are multiple reports that were generated for a report type (VOA, VOI, etc.), only the most recently generated report for the type will be returned.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
    # @param consumer_id [String] The consumer ID
    # @param portfolio_id [String] A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports.
    # @param [Hash] opts the optional parameters
    # @return [Array<(PortfolioWithConsumerSummary, Integer, Hash)>] PortfolioWithConsumerSummary data, response status code and response headers
    def get_portfolio_by_consumer_with_http_info(consumer_id, portfolio_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PortfoliosApi.get_portfolio_by_consumer ...'
      end
      # verify the required parameter 'consumer_id' is set
      if @api_client.config.client_side_validation && consumer_id.nil?
        fail ArgumentError, "Missing the required parameter 'consumer_id' when calling PortfoliosApi.get_portfolio_by_consumer"
      end
      # verify the required parameter 'portfolio_id' is set
      if @api_client.config.client_side_validation && portfolio_id.nil?
        fail ArgumentError, "Missing the required parameter 'portfolio_id' when calling PortfoliosApi.get_portfolio_by_consumer"
      end
      # resource path
      local_var_path = '/decisioning/v1/consumers/{consumerId}/portfolios/{portfolioId}'.sub('{' + 'consumerId' + '}', CGI.escape(consumer_id.to_s)).sub('{' + 'portfolioId' + '}', CGI.escape(portfolio_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/plain'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'PortfolioWithConsumerSummary'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['FinicityAppToken', 'FinicityAppKey']

      new_options = opts.merge(
        :operation => :"PortfoliosApi.get_portfolio_by_consumer",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PortfoliosApi#get_portfolio_by_consumer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Portfolio by Customer
    # Return a portfolio of most recently generated reports for each report type for the given customer. If there are multiple reports that were generated for a report type (VOA, VOI, etc.), only the most recently generated report for the type will be returned.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png) 
    # @param customer_id [String] A customer ID
    # @param portfolio_id [String] A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports.
    # @param [Hash] opts the optional parameters
    # @return [PortfolioSummary]
    def get_portfolio_by_customer(customer_id, portfolio_id, opts = {})
      data, _status_code, _headers = get_portfolio_by_customer_with_http_info(customer_id, portfolio_id, opts)
      data
    end

    # Get Portfolio by Customer
    # Return a portfolio of most recently generated reports for each report type for the given customer. If there are multiple reports that were generated for a report type (VOA, VOI, etc.), only the most recently generated report for the type will be returned.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png) 
    # @param customer_id [String] A customer ID
    # @param portfolio_id [String] A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports.
    # @param [Hash] opts the optional parameters
    # @return [Array<(PortfolioSummary, Integer, Hash)>] PortfolioSummary data, response status code and response headers
    def get_portfolio_by_customer_with_http_info(customer_id, portfolio_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PortfoliosApi.get_portfolio_by_customer ...'
      end
      # verify the required parameter 'customer_id' is set
      if @api_client.config.client_side_validation && customer_id.nil?
        fail ArgumentError, "Missing the required parameter 'customer_id' when calling PortfoliosApi.get_portfolio_by_customer"
      end
      # verify the required parameter 'portfolio_id' is set
      if @api_client.config.client_side_validation && portfolio_id.nil?
        fail ArgumentError, "Missing the required parameter 'portfolio_id' when calling PortfoliosApi.get_portfolio_by_customer"
      end
      # resource path
      local_var_path = '/decisioning/v1/customers/{customerId}/portfolios/{portfolioId}'.sub('{' + 'customerId' + '}', CGI.escape(customer_id.to_s)).sub('{' + 'portfolioId' + '}', CGI.escape(portfolio_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/plain'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'PortfolioSummary'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['FinicityAppToken', 'FinicityAppKey']

      new_options = opts.merge(
        :operation => :"PortfoliosApi.get_portfolio_by_customer",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PortfoliosApi#get_portfolio_by_customer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
