=begin
#Open Banking

#OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.

The version of the OpenAPI document: 1.19.0
Contact: apisupport@mastercard.com
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenBanking::CustomersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CustomersApi' do
  before do
    # run before each test
    @api_instance = OpenBanking::CustomersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomersApi' do
    it 'should create an instance of CustomersApi' do
      expect(@api_instance).to be_instance_of(OpenBanking::CustomersApi)
    end
  end

  # unit tests for add_customer
  # Add Customer
  # Enroll an active customer, which is the actual owner of one or more real-world accounts. This is a billable customer.  Active customers must use the \&quot;FinBank Billable\&quot; profiles for testing purposes.  _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
  # @param new_customer 
  # @param [Hash] opts the optional parameters
  # @return [CreatedCustomer]
  describe 'add_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for add_testing_customer
  # Add Testing Customer
  # Enroll a testing customer (Test Drive accounts).  For using testing customers with FinBank OAuth, you must register a test application with your systems engineer or account manager. Then, use that testing &#x60;applicationId&#x60; when creating testing customers.  Testing Customers can access FinBank profiles (except \&quot;FinBank Billable\&quot; profiles), and cannot access live financial institutions.  _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
  # @param new_customer 
  # @param [Hash] opts the optional parameters
  # @return [CreatedCustomer]
  describe 'add_testing_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_customer
  # Delete Access to Customer by ID
  # Delete access to a customer and all associated accounts. This will delete access to the customer and all their linked accounts. The customer data will no longer be accessible. Any customer data already collected will be retained in accordance with our enterprise data retention policy consistent with legal and business purposes.  ⚠️ Use this service carefully! It will not pause for confirmation before performing the operation! _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
  # @param customer_id A customer ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_customer
  # Get Customer by ID
  # Retrieve a customer by ID.  _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
  # @param customer_id A customer ID
  # @param [Hash] opts the optional parameters
  # @return [GetCustomer200Response]
  describe 'get_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_customer_with_app_data
  # Get Customer With App Data by ID
  # Retrieve a customer along with additional details about the OAuth application.  _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
  # @param customer_id A customer ID
  # @param [Hash] opts the optional parameters
  # @return [CustomerWithAppData]
  describe 'get_customer_with_app_data test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_customers
  # Get Customers
  # Find all customers enrolled by the current partner, where the search text is found in the customer&#39;s username or any combination of &#x60;firstName&#x60; and &#x60;lastName&#x60; fields. If no search text is provided, all customers will be returned.  _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :username Username for exact match (will return 0 or 1 record)
  # @option opts [String] :type \&quot;testing\&quot; or \&quot;active\&quot; to return only customers of that type, or leave empty to return all customers
  # @option opts [String] :search The text you wish to match. Leave this empty if you wish to return all customers. Must be URL-encoded (see: [Handling Spaces in Queries](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/)).
  # @option opts [Integer] :start Index of the page of results to return
  # @option opts [Integer] :limit Maximum number of results per page
  # @return [Customers]
  describe 'get_customers test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for modify_customer
  # Modify Customer by ID
  # Modify an enrolled customer by ID.  You must specify either &#x60;firstName&#x60;, &#x60;lastName&#x60;, or both in the request.  _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
  # @param customer_id A customer ID
  # @param customer_update 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'modify_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
