=begin
#Open Banking

#OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.

The version of the OpenAPI document: 1.19.0
Contact: apisupport@mastercard.com
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenBanking::ConnectApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ConnectApi' do
  before do
    # run before each test
    @api_instance = OpenBanking::ConnectApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ConnectApi' do
    it 'should create an instance of ConnectApi' do
      expect(@api_instance).to be_instance_of(OpenBanking::ConnectApi)
    end
  end

  # unit tests for generate_connect_url
  # Generate Connect URL
  # Generate a Connect URL link to add within your own applications.  Optional Parameters: * &#x60;experience&#x60;: Configure different customer experiences per Connect session by changing the brand, color, logo, icon, the type of credit decisioning report to generate after the session ends, and more. * &#x60;language&#x60;: By default, the Connect application is in English. You don&#39;t need to pass  this parameter unless you want to translate Connect into one of our supported languages.    * Spanish (United States)   * French (Canada)   MVS Developers: You can pre-populate the consumer&#39;s SSN on the Find employment records page at the beginning of the MVS payroll app. Pass the SSN value for the consumer in the body of the request call.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
  # @param connect_parameters 
  # @param [Hash] opts the optional parameters
  # @return [ConnectUrl]
  describe 'generate_connect_url test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_fix_connect_url
  # Generate Fix Connect URL
  # Use the Connect Fix API when the following conditions occur: * The connection to the user&#39;s financial institution is lost * The user&#39;s credentials were updated (for any number of reasons) * The user&#39;s MFA challenge has expired  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
  # @param fix_connect_parameters 
  # @param [Hash] opts the optional parameters
  # @return [ConnectUrl]
  describe 'generate_fix_connect_url test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_joint_borrower_connect_url
  # Generate Connect URL - Joint Borrower
  # Same as Connect Full (&#x60;POST /connect/v2/generate&#x60;) but for joint borrowers.  MVS prompts both the primary and joint borrower to enter each of their financial, payroll, and paystub information in the same Connect session.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
  # @param connect_joint_borrower_parameters 
  # @param [Hash] opts the optional parameters
  # @return [ConnectUrl]
  describe 'generate_joint_borrower_connect_url test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_lite_connect_url
  # Generate Lite Connect URL
  # Connect Lite is a variation of Connect Full (&#x60;POST /connect/v2/generate&#x60;), which has a limited set of features. * Sign in, user&#39;s credentials, and Multi-Factor Authentication (MFA) * No user account management  The Connect Web SDK isn&#39;t a requirement when using Connect lite. However, if you want to use the SDK events, routes, and user events, then you must integrate with the Connect Web SDK.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
  # @param lite_connect_parameters 
  # @param [Hash] opts the optional parameters
  # @return [ConnectUrl]
  describe 'generate_lite_connect_url test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_all_experience
  # Get Experience IDs
  # Retrieve Connect experiences by application name. Optionally, filter the experiences by product codes.
  # @param app_name Unique name of the application provided to Mastercard during app registration.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :product_code A unique billing code assigned to each open banking product used by the customer, as detailed in their contract.
  # @return [Array<Experiences>]
  describe 'get_all_experience test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for send_connect_email
  # Send Connect Email
  # Same as Connect Full (&#x60;POST /connect/v2/generate&#x60;) but send a Connect email to a consumer.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
  # @param connect_email_parameters 
  # @param [Hash] opts the optional parameters
  # @return [ConnectEmailUrl]
  describe 'send_connect_email test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for send_joint_borrower_connect_email
  # Send Connect Email - Joint Borrower
  # Same as Connect Joint Borrower (&#x60;POST /connect/v2/generate/jointBorrower&#x60;) but send a Connect email  to at least one of the joint borrower&#39;s email addresses.  When the consumer opens the email, MVS prompts both the primary and joint borrower to enter each of their financial, payroll, and paystub information in the same Connect session.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
  # @param connect_joint_borrower_email_parameters 
  # @param [Hash] opts the optional parameters
  # @return [ConnectEmailUrl]
  describe 'send_joint_borrower_connect_email test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verify_micro_entry_microdeposit
  # Account Validation Assistant User verification of microdeposits
  # The UI re-engages the consumer to enter two microdeposit amounts found in their account and validates them.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
  # @param micro_entry_verify_request_parameter 
  # @param [Hash] opts the optional parameters
  # @return [ConnectUrl]
  describe 'verify_micro_entry_microdeposit test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
